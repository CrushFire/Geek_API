@{
    var language = ViewBag.Language ?? "ru";
    var query = Context.Request.Query["name"].ToString();
}

@section Head {
    <style>
        .rounded-circle.text-avatar {
            background-color: #4D96FF;
            font-weight: bold;
            font-size: 1.5rem;
            color: white;
        }
    </style>
}

@section Body {
    <div class="app-wrapper">
        <div class="main-content">
            <div class="container">
                <div class="card p-4">
                    <div class="d-flex justify-content-center gap-2 mb-3">
                        <a class="btn btn-lg btn-primary text-white rounded-pill me-2" href="/Post/Search?name=@System.Net.WebUtility.UrlEncode(query)">Posts</a>
                        <a class="btn btn-lg btn-primary text-white rounded-pill me-2" style="background-color: #003366;" href="/Community/Search?name=@System.Net.WebUtility.UrlEncode(query)">Communities</a>
                        <a class="btn btn-lg text-white rounded-pill me-2" style="background-color: #003366;" href="/User/Search?name=@System.Net.WebUtility.UrlEncode(query)">Users</a>
                    </div>

                    <div id="users"></div>
                </div>
                <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-scrollable">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="filterModalLabel">Фильтрация постов</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                            </div>
                            <div class="modal-body">
                                <p>Тут будут параметры фильтрации (категории, дата, сортировка и т.п.)</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                                <button type="button" class="btn btn-primary">Применить</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Script {
    <script>
        const query = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(query));
        const language = "@language";

        let userPage = 1;
        let usersLoading = false;
        let usersReachedEnd = false;
        const renderedUserIds = new Set();

        async function loadUsers() {
            if (usersLoading || usersReachedEnd) return;
            usersLoading = true;

            const container = document.getElementById("users");
            if (userPage === 1) {
                container.innerHTML = "";
                renderedUserIds.clear();
            }

            try {
                const resp = await fetch(`/user-filter?name=${encodeURIComponent(query)}&curPage=${userPage}`);
                const users = await resp.json();

                if (!users || users.length === 0) {
                    if (userPage === 1) {
                        document.getElementById("users").innerHTML = `<p class="text-center text-muted">${language === "ru" ? "Пользователи не найдены." : "Users not found."}</p>`;
                    }
                    usersReachedEnd = true;
                    return;
                }

                for (const user of users) {
                    if (renderedUserIds.has(user.id)) continue;
                    renderedUserIds.add(user.id);

                    const avatar = user.avatar
                        ? `<img src="${user.avatar}" class="rounded-circle border border-primary me-2" style="width: 50px; height: 50px; object-fit: cover;">`
                        : `<div class="rounded-circle text-avatar d-flex align-items-center justify-content-center me-2 border border-primary" style="width: 50px; height: 50px;">
                                      ${user.userName.charAt(0).toUpperCase()}
                                   </div>`;

                    const div = document.createElement("div");
                    div.className = "card mb-3";

                    div.innerHTML = div.innerHTML = `
            <div class="card-body d-flex align-items-center">
                <a href="/UserPage/${user.id}" class="d-flex align-items-center text-decoration-none text-dark w-100">
                    ${avatar}
                    <div class="d-flex flex-column">
                        <strong style="font-size: 1.1rem;">${user.userName.charAt(0).toUpperCase() + user.userName.slice(1)}</strong>
                        ${user.description
                            ? `<small class="text-muted">${user.description}</small>`
                            : '<small class="text-muted"></small>'
                        }
                    </div>
                </a>
            </div>`;

                    container.appendChild(div);
                }

                userPage++;
            } catch (err) {
                console.error("Ошибка загрузки пользователей:", err);
                document.getElementById("users").innerHTML = `<p class="text-center text-danger">${language === "ru" ? "Ошибка загрузки пользователей." : "Failed to load users."}</p>`;
            } finally {
                usersLoading = false;
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            loadUsers();

            window.addEventListener("scroll", () => {
                if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 150) {
                    loadUsers();
                }
            });

            document.getElementById("user-filter").addEventListener("click", () => {
                const modal = new bootstrap.Modal(document.getElementById("filterModal"));
                modal.show();
            });
        });
    </script>
}
