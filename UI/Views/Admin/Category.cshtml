@{
    ViewData["Title"] = "Управление категориями";
}

@section Head {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .admin-nav-top {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.08);
            padding: 1rem 1.5rem;
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }
        .admin-nav-top .nav-link {
            font-size: 1.1rem;
            color: #333;
            font-weight: 500;
            border-radius: 6px;
            margin: 0 0.2rem;
            transition: background 0.15s;
            display: flex;
            align-items: center;
            gap: 0.4rem;
            padding: 0.5rem 1rem;
        }
        .admin-nav-top .nav-link.active, .admin-nav-top .nav-link:hover {
            background: #f3f7fa;
            color: #0d6efd;
            text-decoration: none;
        }
        .admin-panel-title {
            font-weight: bold;
            margin-right: 2rem;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .admin-card-hover:hover {
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15) !important;
            transform: translateY(-4px) scale(1.03);
            transition: all 0.2s;
        }
        .categories-table {
            background: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
        }
        .table-header {
            background-color: #f8f9fa;
        }
        .action-buttons .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        .add-category-form {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        /* Затемнение при редактировании */
        .edit-backdrop {
            position: fixed;
            top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.4);
            z-index: 1040;
        }
        .table-editing {
            position: relative;
            z-index: 1050;
        }
        .table-editing input {
            min-width: 120px;
        }
        .table-editing .btn {
            min-width: 90px;
        }
        .table-editing-row {
            background: #f3f7fa !important;
        }
        .table-editing-row td {
            vertical-align: middle;
        }
    </style>
}

@section Body {
    <div class="container py-4">
        @await Html.PartialAsync("_AdminNav")
        <div class="row mb-4">
            <div class="col">
                <h2 class="fw-bold">Управление категориями</h2>
            </div>
        </div>

        <!-- Форма добавления категории -->
        <div class="add-category-form mb-4">
            <h4 class="mb-3">Добавить новую категорию</h4>
            <form id="addCategoryForm" class="row g-3">
                <div class="col-md-5">
                    <input type="text" class="form-control" id="ruTitle" placeholder="Название на русском" required>
                </div>
                <div class="col-md-5">
                    <input type="text" class="form-control" id="engTitle" placeholder="Название на английском" required>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Добавить</button>
                </div>
            </form>
        </div>

        <!-- Таблица категорий -->
        <div class="categories-table position-relative">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="categoryTable">
                    <thead class="table-header">
                        <tr>
                            <th>ID</th>
                            <th>Русское название</th>
                            <th>Английское название</th>
                            <th>Действия</th>
                        </tr>
                    </thead>
                    <tbody id="categoriesTableBody">
                        <!-- Данные будут загружены через JavaScript -->
                    </tbody>
                </table>
            </div>
            <div id="editBackdrop" class="edit-backdrop" style="display:none;"></div>
        </div>
    </div>
}

@section Script {
    <script>
        let editingRowId = null;

        // Загрузка категорий
        async function loadCategories(page = 1) {
            try {
                const response = await fetch(`/Category?curPage=${page}`);
                const data = await response.json();
                const tbody = document.getElementById('categoriesTableBody');
                tbody.innerHTML = '';

                data.forEach(category => {
                    if (editingRowId === category.id) {
                        // Режим редактирования строки
                        const row = `
                            <tr class="table-editing-row table-editing">
                                <td>${category.id}</td>
                                <td>
                                    <input type="text" class="form-control" id="editRuTitle" value="${escapeHtml(category.title)}" />
                                </td>
                                <td>
                                    <input type="text" class="form-control" id="editEngTitle" value="${escapeHtml(category.engTitle)}" />
                                </td>
                                <td class="action-buttons">
                                    <button class="btn btn-success btn-sm me-2" onclick="saveEditCategory(${category.id})">Сохранить</button>
                                    <button class="btn btn-secondary btn-sm" onclick="cancelEditCategory()">Отмена</button>
                                </td>
                            </tr>
                        `;
                        tbody.innerHTML += row;
                    } else {
                        const disabled = editingRowId !== null ? "disabled" : "";
                        const row = `
                            <tr>
                                <td>${category.id}</td>
                                <td>${escapeHtml(category.title)}</td>
                                <td>${escapeHtml(category.engTitle)}</td>
                                <td class="action-buttons">
                                    <button class="btn btn-sm btn-outline-primary" onclick="editCategory(${category.id}, '${escapeHtml(category.title)}', '${escapeHtml(category.engTitle)}')" ${disabled}>
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </td>
                            </tr>
                        `;
                        tbody.innerHTML += row;
                    }
                });

                // Показать/скрыть затемнение
                document.getElementById('editBackdrop').style.display = editingRowId !== null ? 'block' : 'none';
            } catch (error) {
                console.error('Ошибка при загрузке категорий:', error);
            }
        }

        // Экранирование для безопасной вставки в HTML-атрибуты
        function escapeHtml(text) {
            if (!text) return '';
            return text
                .replace(/&/g, "&amp;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;");
        }

        // Начать редактирование строки
        function editCategory(id, ruTitle, engTitle) {
            if (editingRowId !== null) return;
            editingRowId = id;
            loadCategories();
        }

        // Отмена редактирования
        function cancelEditCategory() {
            editingRowId = null;
            loadCategories();
        }

        // Сохранить изменения
        async function saveEditCategory(id) {
            const ruTitle = document.getElementById('editRuTitle').value;
            const engTitle = document.getElementById('editEngTitle').value;

            try {
                const response = await fetch(`/Category?id=${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        ruTitle: ruTitle,
                        engTitle: engTitle
                    })
                });

                if (response.ok) {
                    editingRowId = null;
                    loadCategories();
                } else {
                    alert('Ошибка при обновлении категории');
                }
            } catch (error) {
                console.error('Ошибка:', error);
            }
        }

        // Добавление новой категории
        document.getElementById('addCategoryForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const ruTitle = document.getElementById('ruTitle').value;
            const engTitle = document.getElementById('engTitle').value;

            try {
                const response = await fetch('/Category', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        ruTitle: ruTitle,
                        engTitle: engTitle
                    })
                });

                if (response.ok) {
                    loadCategories();
                    document.getElementById('addCategoryForm').reset();
                } else {
                    alert('Ошибка при добавлении категории');
                }
            } catch (error) {
                console.error('Ошибка:', error);
            }
        });

        // Затемнение кликабельно только для отмены редактирования
        document.getElementById('editBackdrop').addEventListener('click', cancelEditCategory);

        // Загрузка категорий при загрузке страницы
        document.addEventListener('DOMContentLoaded', () => {
            loadCategories();
        });
    </script>
}
