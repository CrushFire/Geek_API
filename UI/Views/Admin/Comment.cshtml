@{
    ViewData["Title"] = "Управление комментариями";
}

@section Head {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .container.py-4 {
            padding-left: 0 !important;
            padding-right: 0 !important;
        }
        .admin-nav-top {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.08);
            padding: 1rem 1rem;
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            flex-wrap: wrap;
        }
        .admin-nav-top .nav-link {
            font-size: 1rem;
            color: #333;
            font-weight: 500;
            border-radius: 6px;
            margin: 0 0.1rem;
            transition: background 0.15s;
            display: flex;
            align-items: center;
            gap: 0.3rem;
            padding: 0.4rem 0.8rem;
        }
        .admin-nav-top .nav-link.active, .admin-nav-top .nav-link:hover {
            background: #f3f7fa;
            color: #0d6efd;
            text-decoration: none;
        }
        .admin-panel-title {
            font-weight: bold;
            margin-right: 1rem;
            font-size: 1rem;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
        .filter-panel {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.08);
            padding: 1rem 1rem;
            margin-bottom: 1.5rem;
        }
        .comments-table {
            background: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
        }
        .comments-table td, .comments-table th {
            vertical-align: middle;
            height: 70px;
            max-width: 220px;
            padding: 0.4rem 0.3rem;
            font-size: 0.95rem;
        }
        .comments-table td.comment-content-cell {
            max-width: 320px;
            min-width: 140px;
            height: 70px;
            overflow-y: auto;
            overflow-x: hidden;
            white-space: pre-line;
            word-break: break-word;
            background: #f8f9fa;
        }
        .table-header {
            background-color: #f8f9fa;
        }
        .action-buttons .btn {
            padding: 0.18rem 0.35rem;
            font-size: 0.82rem;
        }
        .pagination-controls {
            display: flex;
            justify-content: flex-end;
            gap: 0.3rem;
            margin-top: 1rem;
        }
        .modal-backdrop-custom {
            position: fixed;
            top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.4);
            z-index: 2000;
        }
        .modal-confirm-comment {
            position: fixed;
            top: 50%; left: 50%;
            transform: translate(-50%, -50%);
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.15);
            z-index: 2100;
            padding: 1.1rem 0.8rem;
            min-width: 220px;
            max-width: 99vw;
        }
        .modal-confirm-comment .modal-title {
            font-weight: bold;
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }
        .modal-confirm-comment .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 0.5rem;
            margin-top: 0.7rem;
        }
        .table-responsive {
            width: 100%;
            overflow-x: auto;
        }
        .table {
            min-width: 700px;
            width: 100%;
        }
        .table td, .table th {
            word-break: break-word;
        }
    </style>
}

@section Body {
    <div class="app-wrapper">
        <div class="main-content">
            <div class="container py-4">
                <div class="card p-4 shadow" style="border-radius: 1rem;">
                @await Html.PartialAsync("_AdminNav")
                <div class="row mb-4">
                    <div class="col">
                        <h2 class="fw-bold">Управление комментариями</h2>
                    </div>
                </div>

                <!-- Фильтр по контенту и имени пользователя -->
                <div class="filter-panel mb-4">
                    <form id="commentFilterForm" class="row g-2 align-items-end">
                        <div class="col-md-4">
                            <label class="form-label mb-1">Контент</label>
                            <input type="text" class="form-control" id="filterContent" placeholder="Текст комментария">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label mb-1">Имя пользователя</label>
                            <input type="text" class="form-control" id="filterUserName" placeholder="Имя пользователя">
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary w-100"><i class="bi bi-funnel"></i> Фильтровать</button>
                        </div>
                    </form>
                </div>

                <!-- Таблица комментариев -->
                <div class="comments-table position-relative">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="commentsTable">
                            <thead class="table-header">
                                <tr>
                                    <th>ID</th>
                                    <th>PostID</th>
                                    <th>Пользователь</th>
                                    <th>Контент</th>
                                    <th>Дата</th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody id="commentsTableBody">
                                <!-- Данные будут загружены через JavaScript -->
                            </tbody>
                        </table>
                    </div>
                    <div class="pagination-controls">
                        <button id="prevPageBtn" class="btn btn-outline-secondary btn-sm">&larr; Назад</button>
                        <span id="pageInfo" class="align-self-center"></span>
                        <button id="nextPageBtn" class="btn btn-outline-secondary btn-sm">Вперёд &rarr;</button>
                    </div>
                </div>

                <!-- Модальное окно подтверждения удаления -->
                <div id="commentModalBackdrop" class="modal-backdrop-custom" style="display:none;"></div>
                <div id="commentModal" class="modal-confirm-comment" style="display:none;">
                    <div class="modal-title" id="commentModalTitle">Подтвердите удаление</div>
                    <div id="commentModalText" class="mb-3"></div>
                    <div class="modal-footer">
                        <button id="commentModalCancel" class="btn btn-secondary">Отмена</button>
                        <button id="commentModalConfirm" class="btn btn-danger">Удалить</button>
                    </div>
                </div>
                </div>
            </div>
        </div>
    </div>
}

@section Script {
    <script>
        let currentPage = 1;
        let totalPages = 1;
        const pageSize = 20;
        let filter = {
            content: "",
            userName: ""
        };

        let pendingDelete = { commentId: null, rowElem: null };

        async function loadComments(page = 1) {
            try {
                const params = new URLSearchParams();
                params.append("content", filter.content);
                params.append("userName", filter.userName);
                params.append("curPage", page);

                const response = await fetch(`/comment-admin-list/?${params.toString()}`);
                const data = await response.json();

                const tbody = document.getElementById('commentsTableBody');
                tbody.innerHTML = '';

                totalPages = data.length < pageSize && page === 1 ? 1 : (data.length === pageSize ? page + 1 : page);

                currentPage = page;

                data.forEach(comment => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${comment.id}</td>
                        <td><a href="/post/${comment.postId}" target="_blank">${comment.postId}</a></td>
                        <td><a href="/userPage/${comment.author.id}" target="_blank">${comment.author.userName}</a></td>
                        <td class="comment-content-cell">${comment.content}</td>
                        <td>${comment.createAt ? new Date(comment.createAt).toLocaleDateString() : ""}</td>
                        <td class="action-buttons">
                            <button class="btn btn-sm btn-outline-danger" data-comment-id="${comment.id}" title="Удалить">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    `;
                    tbody.appendChild(row);
                });

                // Обработчик для удаления
                document.querySelectorAll('.action-buttons .btn-outline-danger').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const commentId = this.getAttribute('data-comment-id');
                        showDeleteModal(commentId, this.closest('tr'));
                    });
                });

                document.getElementById('prevPageBtn').disabled = currentPage === 1;
                document.getElementById('nextPageBtn').disabled = data.length < pageSize;
                document.getElementById('pageInfo').textContent = `Страница ${currentPage}`;
            } catch (error) {
                console.error('Ошибка при загрузке комментариев:', error);
            }
        }

        // Модальное окно подтверждения удаления
        function showDeleteModal(commentId, rowElem) {
            pendingDelete = { commentId, rowElem };
            document.getElementById('commentModalTitle').innerText = "Подтвердите удаление";
            document.getElementById('commentModalText').innerText = `Вы уверены, что хотите удалить комментарий #${commentId}?`;
            document.getElementById('commentModalBackdrop').style.display = 'block';
            document.getElementById('commentModal').style.display = 'block';
        }

        function hideCommentModal() {
            document.getElementById('commentModalBackdrop').style.display = 'none';
            document.getElementById('commentModal').style.display = 'none';
            pendingDelete = { commentId: null, rowElem: null };
        }

        document.getElementById('commentModalCancel').onclick = hideCommentModal;
        document.getElementById('commentModalBackdrop').onclick = hideCommentModal;

        document.getElementById('commentModalConfirm').onclick = async function () {
            if (pendingDelete.commentId) {
                try {
                    const response = await fetch(`/Comment/${pendingDelete.commentId}`, { method: "DELETE" });
                    if (response.ok) {
                        hideCommentModal();
                        await loadComments(currentPage);
                    } else {
                        alert("Ошибка при удалении комментария");
                        hideCommentModal();
                    }
                } catch (error) {
                    alert("Ошибка при удалении комментария");
                    hideCommentModal();
                }
            }
        };

        // Фильтрация
        document.getElementById("commentFilterForm").addEventListener("submit", function (e) {
            e.preventDefault();
            filter.content = document.getElementById("filterContent").value;
            filter.userName = document.getElementById("filterUserName").value;
            loadComments(1);
        });

        document.getElementById('prevPageBtn').addEventListener('click', function () {
            if (currentPage > 1) loadComments(currentPage - 1);
        });

        document.getElementById('nextPageBtn').addEventListener('click', function () {
            loadComments(currentPage + 1);
        });

        document.addEventListener('DOMContentLoaded', () => {
            loadComments();
        });
    </script>
}
