@{
    ViewData["Title"] = "Управление постами";
}

@section Head {
    
}

@section Body {
    <div class="app-wrapper">
        <div class="main-content">
            <div class="container py-4">
                <div class="card p-4 shadow" style="border-radius: 1rem;">
                @await Html.PartialAsync("_AdminNav")
                <div class="row mb-4">
                    <div class="col">
                        <h2 class="fw-bold">Управление постами</h2>
                    </div>
                    <!-- Удалена кнопка добавления поста -->
                </div>

                <!-- Фильтр только по названию -->
                <div class="filter-panel mb-4">
                    <form id="postFilterForm" class="row g-2 align-items-end">
                        <div class="col-md-4">
                            <label class="form-label mb-1">Название поста</label>
                            <input type="text" class="form-control" id="filterTitle" placeholder="Название поста">
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary w-100"><i class="bi bi-funnel"></i> Фильтровать</button>
                        </div>
                    </form>
                </div>

                <!-- Таблица постов -->
                <div class="posts-table position-relative">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="postsTable">
                            <thead class="table-header">
                                <tr>
                                    <th>ID</th>
                                    <th>Заголовок</th>
                                    <th>Автор</th>
                                    <th>Дата</th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody id="postsTableBody">
                                <!-- Данные будут загружены через JavaScript -->
                            </tbody>
                        </table>
                    </div>
                    <div class="pagination-controls">
                        <button id="prevPageBtn" class="btn btn-outline-secondary btn-sm">&larr; Назад</button>
                        <span id="pageInfo" class="align-self-center"></span>
                        <button id="nextPageBtn" class="btn btn-outline-secondary btn-sm">Вперёд &rarr;</button>
                    </div>
                </div>

                <!-- Модальное окно подтверждения удаления -->
                <div id="postModalBackdrop" class="modal-backdrop-custom" style="display:none;"></div>
                <div id="postModal" class="modal-confirm-post" style="display:none;">
                    <div class="modal-title" id="postModalTitle">Подтвердите удаление</div>
                    <div id="postModalText" class="mb-3"></div>
                    <div class="modal-footer">
                        <button id="postModalCancel" class="btn btn-secondary">Отмена</button>
                        <button id="postModalConfirm" class="btn btn-danger">Удалить</button>
                    </div>
                </div>
                </div>
            </div>
        </div>
    </div>
}

@section Script {
    <script>
        let currentPage = 1;
        let totalPages = 1;
        const pageSize = 20;
        let filter = {
            title: ""
        };

        let pendingDelete = { postId: null, rowElem: null };

        async function loadPosts(page = 1) {
            try {
                const params = new URLSearchParams();
                params.append("name", filter.title);
                params.append("curPage", page);

                const response = await fetch(`/post-filter/?${params.toString()}`);
                const data = await response.json();

                const tbody = document.getElementById('postsTableBody');
                tbody.innerHTML = '';

                totalPages = data.length < pageSize && page === 1 ? 1 : (data.length === pageSize ? page + 1 : page);

                currentPage = page;

                data.forEach(post => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td><a href="/post/${post.id}" target="_blank">${post.id}</a></td>
                        <td>${post.title}</td>
                        <td>${post.author?.userName || ""}</td>
                        <td>${post.createAt ? new Date(post.createAt).toLocaleDateString() : ""}</td>
                        <td class="action-buttons">
                            <button class="btn btn-sm btn-outline-danger" data-post-id="${post.id}" title="Удалить">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    `;
                    tbody.appendChild(row);
                });

                // Обработчик для удаления
                document.querySelectorAll('.action-buttons .btn-outline-danger').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const postId = this.getAttribute('data-post-id');
                        showDeleteModal(postId, this.closest('tr'));
                    });
                });

                document.getElementById('prevPageBtn').disabled = currentPage === 1;
                document.getElementById('nextPageBtn').disabled = data.length < pageSize;
                document.getElementById('pageInfo').textContent = `Страница ${currentPage}`;
            } catch (error) {
                console.error('Ошибка при загрузке постов:', error);
            }
        }

        // Модальное окно подтверждения удаления
        function showDeleteModal(postId, rowElem) {
            pendingDelete = { postId, rowElem };
            document.getElementById('postModalTitle').innerText = "Подтвердите удаление";
            document.getElementById('postModalText').innerText = `Вы уверены, что хотите удалить пост #${postId}?`;
            document.getElementById('postModalBackdrop').style.display = 'block';
            document.getElementById('postModal').style.display = 'block';
        }

        function hidePostModal() {
            document.getElementById('postModalBackdrop').style.display = 'none';
            document.getElementById('postModal').style.display = 'none';
            pendingDelete = { postId: null, rowElem: null };
        }

        document.getElementById('postModalCancel').onclick = hidePostModal;
        document.getElementById('postModalBackdrop').onclick = hidePostModal;

        document.getElementById('postModalConfirm').onclick = async function () {
            if (pendingDelete.postId) {
                try {
                    const response = await fetch(`/Post/Delete?postId=${pendingDelete.postId}`, { method: "DELETE" });
                    if (response.ok) {
                        hidePostModal();
                        await loadPosts(currentPage);
                    } else {
                        alert("Ошибка при удалении поста");
                        hidePostModal();
                    }
                } catch (error) {
                    alert("Ошибка при удалении поста");
                    hidePostModal();
                }
            }
        };

        // Фильтрация
        document.getElementById("postFilterForm").addEventListener("submit", function (e) {
            e.preventDefault();
            filter.title = document.getElementById("filterTitle").value;
            loadPosts(1);
        });

        document.getElementById('prevPageBtn').addEventListener('click', function () {
            if (currentPage > 1) loadPosts(currentPage - 1);
        });

        document.getElementById('nextPageBtn').addEventListener('click', function () {
            loadPosts(currentPage + 1);
        });

        document.addEventListener('DOMContentLoaded', () => {
            loadPosts();
        });
    </script>
}
